'use strict';

var runs;

$(function () {
  recentRuns();

});

function recentRuns() {
    var user_id =$("#see-all-ran").attr("href")
    if (user_id) {
      user_id = user_id.match(/\d+/)[0]
      $.get('/users/'+user_id+'/runs.json',function (response) {
        runs = response;
        addRunsToWelcome(runs);
      });
    }
}

function Run(id, exercise, drills, duration, run_date, currentWorkout, oneOffName, target_muscles) {
  this.exercise = exercise;
  this.id = id;
  this.drills = drills;
  this.duration = duration;
  this.runDate = run_date;
  this.workout = currentWorkout;
  this.oneoff_name = oneOffName;
  this.target_muscles = target_muscles;
}

Run.prototype.avgWeight = function () {
  var weights = this.drills.map(function(drill){
    return drill.weight
    }).reduce(add, 0);
    var avg;
    avg = weights/this.drills.length;
    return avg
  };


function addRunsToWelcome(runs) {
  runs.forEach(function (run_data) {
    var run = new Run(run_data.id, run_data.exercise, run_data.drills, run_data.duration, run_data.run_date, run_data.workout, run_data.oneoff_name, run_data.target_muscles);
    displayRun(run);
  });
}

function add(a, b) {
  return a + b;
}

function tmList(runTargetMuscles) {
  var muscles = []
  for(var tm in runTargetMuscles){
    muscles.push(runTargetMuscles[tm].name);
  }
  return muscles.join(", ")
}

function displayRun(run) {
  var target_muscles = tmList(run.target_muscles)
  $("#recent-runs").append("<tr id="+run.id+"><td><a href="+'runs/'+run.id+">"+run.oneoff_name+"</a><td>"+target_muscles+"</td></td><td>"+run.runDate+"</td><td>"+run.duration+"</td><td><a href="+'runs/'+run.id+" data-method='delete'>X</a></td></tr>")
}
